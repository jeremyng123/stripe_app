[{"/home/jem/Documents/stripe_test/src/App.js":"1","/home/jem/Documents/stripe_test/src/components/LandingPage.js":"2","/home/jem/Documents/stripe_test/src/index.js":"3","/home/jem/Documents/stripe_test/src/components/PaymentComponent.js":"4","/home/jem/Documents/stripe_test/src/components/Field.js":"5","/home/jem/Documents/stripe_test/src/reportWebVitals.js":"6","/home/jem/Documents/stripe_test/src/components/UseResponsiveFontSize.js":"7","/home/jem/Documents/stripe_test/src/components/forms/CreditCardForm.js":"8","/home/jem/Documents/stripe_test/src/components/PayNowPage.js":"9","/home/jem/Documents/stripe_test/src/components/PayNowPage2.js":"10","/home/jem/Documents/stripe_test/src/components/RegistrationPage.js":"11","/home/jem/Documents/stripe_test/src/components/forms/RegisterAccount.js":"12"},{"size":1606,"mtime":1607319506068,"results":"13","hashOfConfig":"14"},{"size":1232,"mtime":1607057919935,"results":"15","hashOfConfig":"14"},{"size":500,"mtime":1606567415586,"results":"16","hashOfConfig":"14"},{"size":2310,"mtime":1606730286339,"results":"17","hashOfConfig":"14"},{"size":725,"mtime":1606569928313,"results":"18","hashOfConfig":"14"},{"size":362,"mtime":1606567415586,"results":"19","hashOfConfig":"14"},{"size":476,"mtime":1606569346509,"results":"20","hashOfConfig":"14"},{"size":11315,"mtime":1606810313827,"results":"21","hashOfConfig":"14"},{"size":494,"mtime":1607058930027,"results":"22","hashOfConfig":"14"},{"size":5612,"mtime":1607058327002,"results":"23","hashOfConfig":"14"},{"size":1805,"mtime":1607324215326,"results":"24","hashOfConfig":"14"},{"size":18704,"mtime":1607324571606,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"zwvf0a",{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/jem/Documents/stripe_test/src/App.js",["57","58","59","60","61","62"],"import './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Jumbotron, Button, Image, Navbar, Nav, NavDropdown } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport PaymentPage from \"./components/PaymentComponent\";\nimport PayNowPage from \"./components/PayNowPage.js\";\nimport LandingPage from './components/LandingPage';\nimport RegisterPage from './components/RegistrationPage';\n\nrequire('dotenv').config({path:__dirname+'/../.env'})\nconst public_key = process.env.REACT_APP_STRIPE_TEST_PUBLIC_KEY;\n\nexport default function App() {\n  console.log(public_key);\n  return (\n      <Router>\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n          <Navbar.Brand href=\"/\">Home</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />  \n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"mr-auto\">\n                <Nav.Link href='/login'>Login</Nav.Link>\n                <Nav.Link href='/register'>Register</Nav.Link>\n              </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n        {/* Define two routes, payments and then a home page */}\n        <Switch>\n          {/* <Route path=\"/payments\" >\n            <PaymentPage public_key={public_key}/> \n          </Route> */}\n          <Route path=\"/paynow\">\n            <PayNowPage maesh_API_KEY={process.env.REACT_APP_MAESH_TEST_API_KEY}/>\n          </Route> \n          <Route path=\"/register\" component={RegisterPage} />\n          <Route path=\"/\" component={LandingPage} />\n        </Switch>\n      </Router>\n  );\n}",["63","64"],"/home/jem/Documents/stripe_test/src/components/LandingPage.js",["65","66"],"/home/jem/Documents/stripe_test/src/index.js",[],["67","68"],"/home/jem/Documents/stripe_test/src/components/PaymentComponent.js",["69","70","71","72"],"/home/jem/Documents/stripe_test/src/components/Field.js",[],["73","74"],"/home/jem/Documents/stripe_test/src/reportWebVitals.js",[],["75","76"],"/home/jem/Documents/stripe_test/src/components/UseResponsiveFontSize.js",[],"/home/jem/Documents/stripe_test/src/components/forms/CreditCardForm.js",["77","78","79","80","81","82"],"import React, { useState, useMemo } from \"react\";\nimport { useHistory, Redirect, Link } from \"react-router-dom\";\nimport { Form, Modal, Button } from \"react-bootstrap\";\nimport useResponsiveFontSize from \"../UseResponsiveFontSize\";\n\nimport {\n  CardElement,\n  useElements,\n  useStripe,\n  Elements,\n} from \"@stripe/react-stripe-js\";\nimport Field from \"../Field\";\n\nconst axios = require(\"axios\");\n\n//credit card element specific styling\nconst useOptions = () => {\n  const fontSize = useResponsiveFontSize();\n  const options = useMemo(\n    () => ({\n      style: {\n        base: {\n          fontSize,\n          color: \"#424770\",\n          letterSpacing: \"0.025em\",\n          fontFamily: \"Source Code Pro, monospace\",\n          \"::placeholder\": {\n            color: \"#aab7c4\"\n          }\n        },\n        invalid: {\n          color: \"#9e2146\"\n        }\n      }\n    }),\n    [fontSize]\n  );\n\n  return options;\n};\n\n//scredit card button sub component\nconst CardField = ({onChange, options}) => (\n  <div className=\"FormRow\">\n    <CardElement options={options} onChange={onChange} />\n  </div>\n);\n\n//submit button sub component\nconst SubmitButton = ({ processing, error, children, disabled }) => (\n    <button\n      className={`SubmitButton ${error ? \"SubmitButton--error\" : \"\"}`}\n      type=\"submit\"\n      disabled={processing || disabled}\n    >\n        {processing ? \"Processing...\" : children}\n    </button>\n);\n\n//component declaration\nexport default function CreditCardForm(props) {\n\n    let history = useHistory();\n\n    const options = useOptions();\n\n    const stripe = useStripe();\n    const elements = useElements();\n    const [error, setError] = useState(null);\n    const [success, setSuccess] = useState(false)\n    const [cardComplete, setCardComplete] = useState(false);\n    const [processing, setProcessing] = useState(false);\n    const [paymentMethod, setPaymentMethod] = useState('');\n    const [price, setPrice] = useState(0);\n    const [billingDetails, setBillingDetails] = useState({\n        email: '',\n        name: '',\n        address: {    \n            line1: '',\n            line2: '',\n        }\n    });\n\n    //resets state on completion\n    const reset = () => {\n        setError(null);\n        setProcessing(false);\n        setPaymentMethod('');\n        setPrice(0);\n        setSuccess(false);\n        setCardComplete(false);\n        setBillingDetails({\n        email: '',\n        name: '',\n        address: {\n            line1: '',\n            line2: ''\n        }\n        });\n    };\n\n    /*\n\tThis code runs when a card transaction is submitted\n\tThere are three main components to this function:\n\t\t\n\t\t1. create a new stripe payment method using the form data\n\t\t\n\t\t2. get a payment intent from the server using the speficied price\n\t\t3. confirm the payment intent using the new payment method\n\t\t4. send a confiemation to the server if the payment succeeded\n\t*/\n    const handleSubmit = async (event) => {\n        //prevent default form values\n        event.preventDefault();\n\n        ///if stripe api is loaded\n        if (!stripe || !elements) {\n            return;\n        }\n\n        //handle errors\n        if (error) {\n            console.log(error);\n            elements.getElement(\"card\").focus();\n            return;\n        }\n\n        if(price == 0) {\n            return;\n        }\n\n        //start processing animation on submit button\n        if (cardComplete) {\n            setProcessing(true);\n        } else {\n            return;\n        }\n\n\t\t//STEP 1:\n        //create new payment method based on card and form information\n        const payload = await stripe.createPaymentMethod({\n            type: \"card\",\n            card: elements.getElement(CardElement),\n            billing_details: billingDetails\n        });\n\n        //handle errors, otherwise set the new payment method in state\n        if (payload.error) {\n            setError(payload.error);\n            return;\n        } else {\n          setPaymentMethod(payload.paymentMethod)\n        }\n\t\t\n\t\t//STEP 2:\n        //create a new payment request and get irs client secret + id from the server\n        const intentData = await axios\n            .post(process.env.REACT_APP_BACKEND_URL + \"/stripe\", {\n                //include the bet amount\n                price: price,\n            })\n            .then(\n                (response) => {\n                    //SUCCESS: put client secret and id into an object and return it\n                    return {\n                        secret: response.data.client_secret,\n                        id: response.data.intent_id,\n                    };\n                },\n                (error) => {\n                    //ERROR: log the error and return\n                    setError(error)\n                    return error;\n                }\n            );\n\t\t\n\t\t//STEP 3:\n        //confirm the payment and use the new payment method\n        const result = await stripe.confirmCardPayment(intentData.secret, {\n            payment_method: payload.paymentMethod.id,\n        });\n\n        //handle errors again\n        if (result.error) {\n            setError(result.error);\n            return\n        }\n\t\t\n\t\t//STEP 4:\n        // The payment has been processed! send a confirmation to the server\n        if (result.paymentIntent.status === \"succeeded\") {\n            const confirmedPayment = await axios\n                .post(process.env.REACT_APP_BACKEND_URL + \"/confirm-payment\", {\n                    //include id of payment\n                    payment_id: intentData.id,\n                    payment_type: \"stripe\",\n                    //send any other data here\n                })\n                .then(\n                    (response) => {\n                        //SUCCESS: return the response message\n                        return response.data.success;\n                    },\n                    (error) => {\n                        //ERROR:\n                        console.log(error);\n                        setError(error)\n                        return error;\n                    }\n                );\n\n            //reset the state and show the success message\n            if (confirmedPayment) {\n\n                //reset the form\n                reset();\n\n                /*\n                 YOUR APPLICATION SPECIFIC CODE HERE:\n                 for this example all we do is render a modal\n                */\n                setSuccess(true);\n            }\n        }\n    }\n\n    \n\n    //render\n    return (\n        // the credit card form\n        <Form className=\"Form\" onSubmit={handleSubmit}>\n\n            {/* Error modal */}\n            <Modal show={error!=null}>\n                <Modal.Header>\n                    <Modal.Title>Error</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <p>{error}</p>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={(event)=>{setError(null)}}>Close</Button>    \n                </Modal.Footer>\n            </Modal>\n\n\n            {/* success banner, only shows after confirmation */}\n            <Modal show={success}>\n                <Modal.Header>\n                    <Modal.Title>Payment Succeeded</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    Your card payment has been confirmed\n                </Modal.Body>\n                <Modal.Footer>\n                        <Button variant=\"success\" onClick={ () =>{history.push(\"/\")}}>Close</Button>\n                    \n                </Modal.Footer>\n            </Modal>\n\n            {/* Bet amount field */}\n            <Field\n                label=\"Donation Amount\"\n                id=\"bet\"\n                type=\"number\"\n                placeholder=\"0\"\n                required\n                autoComplete=\"tel\"\n                min=\"1\"\n                value={price}\n                onChange={(event) => {\n                    if (event.target.value >= 0){\n                        setPrice(event.target.value);\n                    }\n                }}\n            />\n\n            {/* Credit Card Payment Form */}\n            <fieldset className=\"FormGroup\">\n                {/* name field */}\n                <Field\n                    label=\"Name\"\n                    id=\"name\"\n                    type=\"text\"\n                    placeholder=\"Jane Doe\"\n                    required\n                    autoComplete=\"name\"\n                    value={billingDetails.name}\n                    onChange={(event) => {\n                        setBillingDetails({...billingDetails, name: event.target.value});\n                    }}\n                />\n                {/* email field */}\n                <Field\n                    label=\"Email\"\n                    id=\"email\"\n                    type=\"email\"\n                    placeholder=\"janedoe@gmail.com\"\n                    required\n                    autoComplete=\"email\"\n                    value={billingDetails.email}\n                    onChange={(event) => {\n                        setBillingDetails({...billingDetails, email: event.target.value});\n                    }}\n                />\n                {/* address fields */}\n                <Field\n                    label=\"Billing Address\"\n                    id=\"line1\"\n                    type=\"address-line1\"\n                    placeholder=\"1234 your street\"\n                    required\n                    autoComplete=\"address-line1\"\n                    value={billingDetails.address.line1}\n                    onChange={(event) => {\n                        setBillingDetails({...billingDetails, \n                            address: {\n                                line1: event.target.value, \n                                line2: billingDetails.address.line2\n                            }\n                        });\n                    }}\n                />\n                {/* address line 2 */}\n                <Field\n                    label=\"\"\n                    id=\"line2\"\n                    type=\"address-line2\"\n                    placeholder=\"building/suite number\"\n                    autoComplete=\"address-line2\"\n                    value={billingDetails.address.line2}\n                    onChange={(event) => {\n                        setBillingDetails({...billingDetails, \n                            address: {\n                                line1: billingDetails.address.line1, \n                                line2: event.target.value, \n                            }\n                        });\n                    }}\n                />\n            </fieldset>\n\n            {/* credit card field and submit button */}\n            <fieldset className=\"FormGroup\">\n                {/* card */}\n                <CardField\n                  options={options}\n                  onChange={(event) => {\n                      {event.error ? setError(event.error.message) : setError(null)};\n                      setCardComplete(event.complete);\n                  }}\n                />\n                \n            </fieldset>\n            {/* submit */}\n            <SubmitButton\n                    processing={processing}\n                    error={error}\n                    disabled={!stripe}\n                >\n                    Make Payment\n            </SubmitButton>\n        </Form>\n    );\n    \n}","/home/jem/Documents/stripe_test/src/components/PayNowPage.js",[],"/home/jem/Documents/stripe_test/src/components/PayNowPage2.js",["83","84","85","86","87","88","89","90","91","92","93","94","95","96","97"],"import { Container, Jumbotron, Button, Image, Col, Form, Modal, } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport React, { useState, useMemo } from \"react\";\nimport { useHistory, Redirect, Link } from \"react-router-dom\";\nimport useResponsiveFontSize from \"./UseResponsiveFontSize\";\n\nimport Field from \"./Field\";\nimport { render } from \"react-dom\";\nimport Maesh from \"maesh-test\";\nconst axios = require(\"axios\");\n\n//credit card element specific styling\nconst useOptions = () => {\n  const fontSize = useResponsiveFontSize();\n  const options = useMemo(\n    () => ({\n      style: {\n        base: {\n          fontSize,\n          color: \"#424770\",\n          letterSpacing: \"0.025em\",\n          fontFamily: \"Source Code Pro, monospace\",\n          \"::placeholder\": {\n            color: \"#aab7c4\"\n          }\n        },\n        invalid: {\n          color: \"#9e2146\"\n        }\n      }\n    }),\n    [fontSize]\n  );\n\n  return options;\n};\n\n\n//submit button sub component\nconst SubmitButton = ({ processing, error, children, disabled }) => (\n    <button\n      className={`SubmitButton ${error ? \"SubmitButton--error\" : \"\"}`}\n      type=\"submit\"\n      disabled={processing || disabled}\n    >\n        {processing ? \"Processing...\" : children}\n    </button>\n);\n\n//component declaration\nfunction PayNowForm(props) {\n\n    let history = useHistory();\n\n    const options = useOptions();\n\n    const [error, setError] = useState(null);\n    const [success, setSuccess] = useState(false)\n    const [processing, setProcessing] = useState(false);\n    const [price, setPrice] = useState(0);\n    const [refname, setRefname] = useState(0);\n    const [formComplete, setFormComplete] = useState(false);\n\n    //resets state on completion\n    const reset = () => {\n        setError(null);\n        setProcessing(false);\n        setPrice(0);\n        setSuccess(false);\n        setFormComplete(false);\n    };\n\n    const data = {\n      api_key: props.maesh_API_KEY,\n      amount: 0,\n      currency: \"SGD\",\n      referenceCode: \"ABCDEFGH\",\n      gotoUrl: \"http://localhost\" + \"/\",\n    };\n    const handleSubmit = async (event) => {\n        //prevent default form values\n        event.preventDefault();\n\n        if(price == 0) {\n            return;\n        }\n\n        //start processing animation on submit button\n        if (formComplete) {\n            setProcessing(true);\n        } else {\n            return;\n        }\n\n        data.amount = price;\n    }\n\n    // const redirect_with_props = (ref_name) => {\n    //   history.push({\n    //     pathname: \"/paynow/\"+ ref_name,\n    //     state: {\n    //       ...props,\n    //       price: price\n    //     }\n    //   });\n    // }\n\n    \n\n    //render\n    return (\n        // the credit card form\n        <Form className=\"Form\" onSubmit={handleSubmit}>\n\n            {/* Error modal */}\n            <Modal show={error!=null}>\n                <Modal.Header>\n                    <Modal.Title>Error</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <p>{error}</p>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={(event)=>{setError(null)}}>Close</Button>    \n                </Modal.Footer>\n            </Modal>\n\n            <Modal show={processing}>\n                <Modal.Header>\n                    <Modal.Title>PayNow page</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    Your QR Code has been generated!\n                    {console.log(data)}\n                  <Maesh data={data} />\n                </Modal.Body>\n                <Modal.Footer>\n                        <Button variant=\"success\" onClick={ (event) =>{setSuccess(true)}}>Close</Button>\n                    \n                </Modal.Footer>\n            </Modal>\n\n\n            {/* success banner, only shows after confirmation */}\n            <Modal show={success}>\n                <Modal.Header>\n                    <Modal.Title>Payment Succeeded</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    Payment received with Maesh!\n                </Modal.Body>\n                <Modal.Footer>\n                        <Button variant=\"success\" onClick={ () =>{history.push('/')}}>Close</Button>\n                    \n                </Modal.Footer>\n            </Modal>\n\n            {/* Bet amount field */}\n            <Field\n                label=\"Price\"\n                id=\"price\"\n                type=\"number\"\n                placeholder=\"10\"\n                required\n                autoComplete=\"tel\"\n                min=\"1\"\n                value={price}\n                onChange={(event) => {\n                    if (event.target.value >= 0){\n                        setPrice(event.target.value);\n                        setFormComplete(true);\n                    }\n                }}\n            />\n\n\n            <SubmitButton\n                    processing={processing}\n                    error={error}\n                >\n                    Make Payment\n            </SubmitButton>\n        </Form>\n    );\n    \n}\n\nexport default function PayNowPage(props) {\n  const data = {\n    api_key: props.maesh_API_KEY,\n    amount: 15000  ,\n    currency: \"SGD\",\n    referenceCode: \"ABCD1231H\",\n    gotoUrl: \"https://www.proccoli.com\"\n  };\n  console.log(data);\n  return (\n    <Maesh data=\"{data}\" />\n    /* Payments renders a blank screen containing our payments component */\n    // <Container>\n      // {/* <PayNowForm\n      //   maesh_API_KEY={ props.maesh_API_KEY }\n      // /> */}\n      \n    // </Container>\n  );\n}\n","/home/jem/Documents/stripe_test/src/components/RegistrationPage.js",["98","99","100","101"],"/home/jem/Documents/stripe_test/src/components/forms/RegisterAccount.js",["102","103","104","105","106","107"],{"ruleId":"108","severity":1,"message":"109","line":3,"column":10,"nodeType":"110","messageId":"111","endLine":3,"endColumn":19},{"ruleId":"108","severity":1,"message":"112","line":3,"column":21,"nodeType":"110","messageId":"111","endLine":3,"endColumn":30},{"ruleId":"108","severity":1,"message":"113","line":3,"column":32,"nodeType":"110","messageId":"111","endLine":3,"endColumn":38},{"ruleId":"108","severity":1,"message":"114","line":3,"column":40,"nodeType":"110","messageId":"111","endLine":3,"endColumn":45},{"ruleId":"108","severity":1,"message":"115","line":3,"column":60,"nodeType":"110","messageId":"111","endLine":3,"endColumn":71},{"ruleId":"108","severity":1,"message":"116","line":6,"column":8,"nodeType":"110","messageId":"111","endLine":6,"endColumn":19},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"108","severity":1,"message":"114","line":1,"column":40,"nodeType":"110","messageId":"111","endLine":1,"endColumn":45},{"ruleId":"108","severity":1,"message":"121","line":1,"column":47,"nodeType":"110","messageId":"111","endLine":1,"endColumn":50},{"ruleId":"117","replacedBy":"122"},{"ruleId":"119","replacedBy":"123"},{"ruleId":"108","severity":1,"message":"112","line":1,"column":21,"nodeType":"110","messageId":"111","endLine":1,"endColumn":30},{"ruleId":"108","severity":1,"message":"114","line":1,"column":40,"nodeType":"110","messageId":"111","endLine":1,"endColumn":45},{"ruleId":"108","severity":1,"message":"124","line":3,"column":22,"nodeType":"110","messageId":"111","endLine":3,"endColumn":26},{"ruleId":"108","severity":1,"message":"125","line":40,"column":7,"nodeType":"110","messageId":"111","endLine":40,"endColumn":23},{"ruleId":"117","replacedBy":"126"},{"ruleId":"119","replacedBy":"127"},{"ruleId":"117","replacedBy":"128"},{"ruleId":"119","replacedBy":"129"},{"ruleId":"108","severity":1,"message":"130","line":2,"column":22,"nodeType":"110","messageId":"111","endLine":2,"endColumn":30},{"ruleId":"108","severity":1,"message":"124","line":2,"column":32,"nodeType":"110","messageId":"111","endLine":2,"endColumn":36},{"ruleId":"108","severity":1,"message":"131","line":10,"column":3,"nodeType":"110","messageId":"111","endLine":10,"endColumn":11},{"ruleId":"108","severity":1,"message":"132","line":73,"column":12,"nodeType":"110","messageId":"111","endLine":73,"endColumn":25},{"ruleId":"133","severity":1,"message":"134","line":128,"column":18,"nodeType":"135","messageId":"136","endLine":128,"endColumn":20},{"ruleId":"137","severity":1,"message":"138","line":351,"column":23,"nodeType":"139","messageId":"140","endLine":351,"endColumn":85},{"ruleId":"108","severity":1,"message":"109","line":1,"column":10,"nodeType":"110","messageId":"111","endLine":1,"endColumn":19},{"ruleId":"108","severity":1,"message":"112","line":1,"column":21,"nodeType":"110","messageId":"111","endLine":1,"endColumn":30},{"ruleId":"108","severity":1,"message":"114","line":1,"column":40,"nodeType":"110","messageId":"111","endLine":1,"endColumn":45},{"ruleId":"108","severity":1,"message":"121","line":1,"column":47,"nodeType":"110","messageId":"111","endLine":1,"endColumn":50},{"ruleId":"108","severity":1,"message":"130","line":5,"column":22,"nodeType":"110","messageId":"111","endLine":5,"endColumn":30},{"ruleId":"108","severity":1,"message":"124","line":5,"column":32,"nodeType":"110","messageId":"111","endLine":5,"endColumn":36},{"ruleId":"108","severity":1,"message":"141","line":9,"column":10,"nodeType":"110","messageId":"111","endLine":9,"endColumn":16},{"ruleId":"108","severity":1,"message":"142","line":11,"column":7,"nodeType":"110","messageId":"111","endLine":11,"endColumn":12},{"ruleId":"108","severity":1,"message":"143","line":52,"column":10,"nodeType":"110","messageId":"111","endLine":52,"endColumn":20},{"ruleId":"108","severity":1,"message":"144","line":56,"column":11,"nodeType":"110","messageId":"111","endLine":56,"endColumn":18},{"ruleId":"108","severity":1,"message":"145","line":62,"column":12,"nodeType":"110","messageId":"111","endLine":62,"endColumn":19},{"ruleId":"108","severity":1,"message":"146","line":62,"column":21,"nodeType":"110","messageId":"111","endLine":62,"endColumn":31},{"ruleId":"108","severity":1,"message":"147","line":66,"column":11,"nodeType":"110","messageId":"111","endLine":66,"endColumn":16},{"ruleId":"148","severity":1,"message":"149","line":79,"column":35,"nodeType":"135","messageId":"150","endLine":79,"endColumn":36},{"ruleId":"133","severity":1,"message":"134","line":85,"column":18,"nodeType":"135","messageId":"136","endLine":85,"endColumn":20},{"ruleId":"108","severity":1,"message":"112","line":1,"column":21,"nodeType":"110","messageId":"111","endLine":1,"endColumn":30},{"ruleId":"108","severity":1,"message":"114","line":1,"column":40,"nodeType":"110","messageId":"111","endLine":1,"endColumn":45},{"ruleId":"108","severity":1,"message":"124","line":3,"column":22,"nodeType":"110","messageId":"111","endLine":3,"endColumn":26},{"ruleId":"108","severity":1,"message":"144","line":41,"column":9,"nodeType":"110","messageId":"111","endLine":41,"endColumn":16},{"ruleId":"108","severity":1,"message":"130","line":2,"column":22,"nodeType":"110","messageId":"111","endLine":2,"endColumn":30},{"ruleId":"108","severity":1,"message":"124","line":2,"column":32,"nodeType":"110","messageId":"111","endLine":2,"endColumn":36},{"ruleId":"151","severity":1,"message":"152","line":49,"column":26,"nodeType":"153","messageId":"154","endLine":49,"endColumn":27,"suggestions":"155"},{"ruleId":"108","severity":1,"message":"156","line":289,"column":11,"nodeType":"110","messageId":"111","endLine":289,"endColumn":17},{"ruleId":"108","severity":1,"message":"144","line":495,"column":9,"nodeType":"110","messageId":"111","endLine":495,"endColumn":16},{"ruleId":"108","severity":1,"message":"147","line":503,"column":9,"nodeType":"110","messageId":"111","endLine":503,"endColumn":14},"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Jumbotron' is defined but never used.","'Button' is defined but never used.","'Image' is defined but never used.","'NavDropdown' is defined but never used.","'PaymentPage' is defined but never used.","no-native-reassign",["157"],"no-negated-in-lhs",["158"],"'Col' is defined but never used.",["157"],["158"],"'Link' is defined but never used.","'ELEMENTS_OPTIONS' is assigned a value but never used.",["157"],["158"],["157"],["158"],"'Redirect' is defined but never used.","'Elements' is defined but never used.","'paymentMethod' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'render' is defined but never used.","'axios' is assigned a value but never used.","'PayNowForm' is defined but never used.","'options' is assigned a value but never used.","'refname' is assigned a value but never used.","'setRefname' is assigned a value but never used.","'reset' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["159","160"],"'fields' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"161","fix":"162","desc":"163"},{"messageId":"164","fix":"165","desc":"166"},"removeEscape",{"range":"167","text":"168"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"169","text":"170"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[1186,1187],"",[1186,1186],"\\"]